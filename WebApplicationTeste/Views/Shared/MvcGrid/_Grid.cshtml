@using TCEPR.Mvc.Grid;

@model IGrid

@{
    bool hasGroupTitle = false;
    string actualGroup = "";
    Dictionary<string, int> groupTitles = new Dictionary<string, int>();
    foreach (var column in Model.Columns)
    {
        if (!String.IsNullOrEmpty(column.GroupTitle) && column.IsVisible)
        {
            hasGroupTitle = true;
            if (!groupTitles.ContainsKey(column.GroupTitle))
            {
                groupTitles.Add(column.GroupTitle, 0);
            }

            groupTitles[column.GroupTitle] += 1;
        }
    }
}

<div class="mvc-grid" data-name="@Model.Name" data-ajax-url="@Model.AjaxUrl" data-loading-text="@Model.LoadingText" data-loading-gif="@Model.LoadingGif">
    <table class="table mvc-grid-table @Model.CssClasses" border="1">
        <thead>
            <tr>
                @foreach (IGridColumn column in Model.Columns)
                {
                    if (column.IsVisible)
                    {
                        if (!hasGroupTitle || (hasGroupTitle && String.IsNullOrEmpty(column.GroupTitle)))
                        {

                            String filterableClass = column.IsFilterable == true ? "filterable" : null;
                            String sortableClass = column.IsSortable == true ? "sortable" : null;
                            String doubleHeaderClass = (hasGroupTitle && String.IsNullOrEmpty(column.GroupTitle)) ? "mvc-grid-double-vertical-header" : null;

                            <th class="mvc-grid-header @filterableClass @sortableClass @column.CssClasses @doubleHeaderClass"
                                data-name="@column.Name"
                                data-filterable="@column.IsFilterable"
                                data-filter-name="@column.FilterName"
                                data-filter-multi="@column.IsMultiFilterable"
                                data-filter-first-type="@(column.Filter != null && column.Filter.First != null
                            ? column.Filter.First.Type : "")"
                                data-filter-first-val="@(column.Filter != null && column.Filter.First != null
                            ? column.Filter.First.Value : "")"
                                data-filter-operator="@(column.Filter != null ? column.Filter.Operator : "")"
                                data-filter-second-type="@(column.Filter != null && column.Filter.Second != null
                            ? column.Filter.Second.Type : "")"
                                data-filter-second-val="@(column.Filter != null && column.Filter.Second != null
                            ? column.Filter.Second.Value : "")"
                                data-sortable="@column.IsSortable"
                                data-sort-order="@column.SortOrder"
                                data-sort-first="@column.FirstSortOrder"
                                title="@column.Tooltip"
                                rowspan="@(hasGroupTitle && String.IsNullOrEmpty(column.GroupTitle) ? 2 : 1)"
                                style="@column.StyleInline">
                                <span class="mvc-grid-header-title">@column.Title</span>
                                @if (column.IsSortable == true)
                                {
                                    <span class="mvc-grid-sort @column.SortOrder.ToString().ToLower()"></span>
                                }
                                @if (column.IsFilterable == true)
                                {
                                    String filterApplied = column.Filter != null && (column.Filter.First != null || column.Filter.Second != null) ? "applied" : "";
                                    <span class="mvc-grid-filter @filterApplied"></span>
                                }
                            </th>
                        }
                        else if (!String.IsNullOrEmpty(column.GroupTitle) && actualGroup != column.GroupTitle)
                        {
                            String doubleHeaderClass = (hasGroupTitle && String.IsNullOrEmpty(column.GroupTitle)) ? "mvc-grid-double-horizontal-header" : null;

                            actualGroup = column.GroupTitle;
                            <th colspan="@groupTitles[actualGroup]" style="text-align:center;" class="mvc-grid-header @doubleHeaderClass" title="@column.GroupTooltip">
                                <span class="mvc-grid-header-title">@actualGroup</span>
                            </th>
                        }
                    }
                }
            </tr>
            @if (hasGroupTitle)
            {
                <tr>
                    @foreach (IGridColumn column in Model.Columns)
                    {
                        if (column.IsVisible)
                        {
                            if (!String.IsNullOrEmpty(column.GroupTitle))
                            {

                                String filterableClass = column.IsFilterable == true ? "filterable" : null;
                                String sortableClass = column.IsSortable == true ? "sortable" : null;

                                <th class="mvc-grid-header @filterableClass @sortableClass @column.CssClasses"
                                    data-name="@column.Name"
                                    data-filterable="@column.IsFilterable"
                                    data-filter-name="@column.FilterName"
                                    data-filter-multi="@column.IsMultiFilterable"
                                    data-filter-first-type="@(column.Filter != null && column.Filter.First != null
                                    ? column.Filter.First.Type : "")"
                                    data-filter-first-val="@(column.Filter != null && column.Filter.First != null
                                    ? column.Filter.First.Value : "")"
                                    data-filter-operator="@(column.Filter != null ? column.Filter.Operator : "")"
                                    data-filter-second-type="@(column.Filter != null && column.Filter.Second != null
                                    ? column.Filter.Second.Type : "")"
                                    data-filter-second-val="@(column.Filter != null && column.Filter.Second != null
                                    ? column.Filter.Second.Value : "")"
                                    data-sortable="@column.IsSortable"
                                    data-sort-order="@column.SortOrder"
                                    data-sort-first="@column.FirstSortOrder"
                                    title="@column.Tooltip"
                                    style="@column.StyleInline">
                                    <span class="mvc-grid-header-title">@column.Title</span>
                                    @if (column.IsSortable == true)
                                    {
                                        <span class="mvc-grid-sort @column.SortOrder.ToString().ToLower()"></span>
                                    }
                                    @if (column.IsFilterable == true)
                                    {
                                        String filterApplied = column.Filter != null && (column.Filter.First != null || column.Filter.Second != null) ? "applied" : "";
                                        <span class="mvc-grid-filter @filterApplied"></span>
                                    }
                                </th>
                            }
                        }
                    }
                </tr>
            }
        </thead>
        <tbody>
            @if (Model.Rows.Count() > 0)
            {
                foreach (IGridRow row in Model.Rows)
                {
                    <tr class="mvc-grid-row @row.CssClasses">
                        @foreach (IGridColumn column in Model.Columns)
                        {
                            if (column.IsVisible)
                            {
                                <td class="@column.CssClasses @column.CssClassesFor(row)" style="@column.StyleInline @column.StyleInlineFor(row)">@column.ValueFor(row)</td>
                            }
                        }
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="mvc-grid-table-empty" colspan="@Model.Columns.Count(x => x.IsVisible)">
                        @Model.EmptyText
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.Pager != null)
    {
        @Html.Partial(Model.Pager.PartialViewName, Model.Pager)
    }
</div>
